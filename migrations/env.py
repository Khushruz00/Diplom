import os
import sys
from logging.config import fileConfig

from sqlalchemy import engine_from_config, pool
from alembic import context

# üìå –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# üì¶ –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –º–æ–¥–µ–ª–µ–π
from Diplom.config import DevelopmentConfig
from Diplom.models import db

# Alembic Config –æ–±—ä–µ–∫—Ç
config = context.config

# ‚úÖ –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ alembic.ini –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
alembic_ini_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'alembic.ini'))
fileConfig(alembic_ini_path)

# ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º URL –∫ –ë–î –∏–∑ Flask config
config.set_main_option("sqlalchemy.url", DevelopmentConfig.SQLALCHEMY_DATABASE_URI)

# üìå –£–∫–∞–∑—ã–≤–∞–µ–º metadata
target_metadata = db.metadata


def run_migrations_offline() -> None:
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î)."""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )
    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online() -> None:
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –æ–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º–µ (—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î)."""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
        )

        with context.begin_transaction():
            context.run_migrations()


# üîÅ –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
